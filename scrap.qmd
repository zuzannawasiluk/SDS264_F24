---
title: "R Tip of the Day"
subtitle: "gt package"
author: "Zuzanna Wasiluk"
format: 
  revealjs:
    incremental: true  
    slide-number: true
    preview-links: auto
    self-contained: true
editor_options: 
  chunk_output_type: console
---

## My problem

- Stats 2 group project needed display tables 
  - Professional, readable, and visually appealing tables 
- Tibble is not visually appealing

```{r}
library(tidyverse)
library(palmerpenguins)
library(gt)
```

## Data Used {.smaller}

- Dog Bites in New York City from Kaggle datasets
  - Information on date of bite, breed, age (in years and months), whether the dog was spayed or neutered, borough the bite occurred, and zip code 
  
- penguins dataset from palmerpenguins

- A fake dataset I created with only two variables: Rcolors and a count of St. Olaf students that favor the color

::: footer
Learn more about Dog Bites dataset: [Kaggle](https://www.kaggle.com/datasets/michaelbryantds/dog-bite-incidents)
:::

---
  
```r
dogbites <- dogbites |> 
  filter(Breed != "UNKNOWN") |> 
  mutate(year = mdy(DateOfBite)) |> 
  mutate(year = (str_extract(year, "...."))) |> 
  select(DateOfBite,year, Breed, Age, Gender, SpayNeuter, Borough, ZipCode) |> 
  na.omit() |> 
  arrange(desc(year)) |> 
  mutate(breed = (str_to_lower(Breed))) |> 
  select(-Breed, -DateOfBite, -ZipCode) |> 
  head(n=10)

penguins <- penguins |> 
  as_tibble(
  name = names(penguins),
  size = bill_length_mm) |> 
  arrange(desc(island)) |> 
  select(year, sex, species, island, bill_length_mm) |> 
  head(n = 20)
  
colors <- c("blue", "lightblue1", "deepskyblue", "deepskyblue1", "deepskyblue2","dodgerblue","navy", "red", "firebrick", "darkred", "orangered4", "orange", "orangered2", "orange3")
preference <- c("45", "34", "23", "13", "56", "78", "77", "32", "9", "63", "41", "23", "15", "7")
rcolors_data <- data.frame(rcolors = colors, preference = preference)
```
```{r}
dogbites <- read_csv("Data Science 2 Data Folder/DOHMH_Dog_Bite_Data.csv")
dogbites2 <- dogbites |> 
  filter(Breed != "UNKNOWN") |> 
  mutate(year = mdy(DateOfBite)) |> 
  mutate(year = (str_extract(year, "...."))) |> 
  select(DateOfBite,year, Breed, Age, Gender, SpayNeuter, Borough, ZipCode) |> 
  na.omit() |> 
  arrange(desc(year)) |> 
  mutate(breed = (str_to_lower(Breed))) |> 
  select(-Breed, -DateOfBite, -ZipCode) |> 
  head(n=10)

penguins <- penguins |> 
  as_tibble(
  name = names(penguins),
  size = bill_length_mm) |> 
  arrange(desc(island)) |> 
  select(year, sex, species, island, bill_length_mm) |> 
  head(n = 20)
  
colors <- c("blue", "lightblue1", "deepskyblue", "deepskyblue1", "deepskyblue2","dodgerblue","navy", "red", "firebrick", "darkred", "orangered4", "orange", "orangered2", "orange3")
preference <- c("45", "34", "23", "13", "56", "78", "77", "32", "9", "63", "41", "23", "15", "7")
rcolors_data <- data.frame(rcolors = colors, preference = preference)
```


## Why gt?

::: {.nonincremental}
- Makes it simple to produce professional-looking display tables
- Go beyond tibbles with annotations, table element styling, and text transformations
  - Create a simple gt table using this code: gt(penguins)
::: 

```{r}
penguins_tbl <- gt(penguins)
penguins_tbl
```

## Creating a header
::: {.nonincremental}
- Specify a title and a subtitle in tab_header()

```{.r code-line-numbers="73|74-76"}
penguins_tbl |> 
  tab_header(
    title = "Large Bills",
    subtitle = " By species, island, sex, and year"
  ) |> 
  tab_source_note(
    source_note = "Source: PalmerPenguins package in R."
  ) |> 
  tab_footnote(
    footnote = "Footnote",
    locations = cells_body(columns = species, rows = 2:3)
  ) |> 
  tab_spanner(
    label = "Penguins",
    columns = c(year, sex, species, island)
  ) |>
  tab_spanner(
    label = "Measurement",
    columns = bill_length_mm
  ) |> 
  cols_label(
    bill_length_mm = html("bill length,<br>mm")
  )
```
:::

## Output: Header

```{r}
penguins_tbl |> 
  tab_header(
    title = "Large Bills",
    subtitle = " By species, island, sex, and year"
  )
```

## Adding a source and footnote

``` {.r code-line-numbers="109-115"}
penguins_tbl |> 
  tab_header(
    title = "Large Bills",
    subtitle = " By species, island, sex, and year"
  ) |>
  tab_source_note(
    source_note = "Source: PalmerPenguins package in R."
  ) |> 
  tab_footnote(
    footnote = "Footnote",
    locations = cells_body(columns = species, rows = 2:3)
  ) |> 
  tab_spanner(
    label = "Penguins",
    columns = c(year, sex, species, island)
  ) |>
  tab_spanner(
    label = "Measurement",
    columns = bill_length_mm
  ) |> 
  cols_label(
    bill_length_mm = html("bill length,<br>mm")
  )
```

## Output: Footnote

```{r}
penguins_tbl |> 
  tab_source_note(
    source_note = "Source: PalmerPenguins package in R."
  ) |> 
  tab_footnote(
    footnote = "Footnote",
    locations = cells_body(columns = species, rows = 2:3)
  ) 
```

## Dividing variables into sections with tab_spanner()

``` {.r code-line-numbers="144-151"}
penguins_tbl |> 
  tab_header(
    title = "Large Bills",
    subtitle = " By species, island, sex, and year"
  ) |> 
  tab_source_note(
    source_note = "Source: PalmerPenguins package in R."
  ) |> 
  tab_footnote(
    footnote = "Footnote",
    locations = cells_body(columns = species, rows = 2:3)
  ) |> 
  tab_spanner(
    label = "Penguins",
    columns = c(year, sex, species, island)
  ) |>
  tab_spanner(
    label = "Measurement",
    columns = bill_length_mm
  ) |> 
  cols_label(
    bill_length_mm = html("bill length,<br>mm")
  )
```

## Output: Spanner

```{r}
penguins_tbl |> 
   tab_spanner(
    label = "Penguins",
    columns = c(year, sex, species, island)
  ) |>
  tab_spanner(
    label = "Measurement",
    columns = bill_length_mm
  )
```

## Adding units or labels to a variable

::: {.nonincremental}
- Bill length is measured in mm but it is easier to express this with a label
:::

``` {.r code-line-numbers="173-175"}
  tab_footnote(
    footnote = "Footnote",
    locations = cells_body(columns = species, rows = 2:3)
  ) |> 
  tab_spanner(
    label = "Penguins",
    columns = c(year, sex, species, island)
  ) |>
  tab_spanner(
    label = "Measurement",
    columns = bill_length_mm
  ) |> 
  cols_label(
    bill_length_mm = html("bill length,<br>mm")
  )
```

## Units on Display

```{r}
penguins_tbl |> 
   cols_label(
    bill_length_mm = html("bill length,<br>mm")
  )
```

## Final output with Everything

```{r}
library(tidyverse)
library(palmerpenguins)
library(gt)

penguins <- penguins |> 
  as_tibble(
  name = names(penguins),
  size = bill_length_mm) |> 
  arrange(desc(island)) |> 
  select(year, sex, species, island, bill_length_mm) |> 
  head(n = 20)

penguins_tbl |> 
  tab_header(
    title = "Large Bills",
    subtitle = " By species, island, sex, and year"
  ) |> 
  tab_source_note(
    source_note = "Source: PalmerPenguins package in R."
  ) |> 
  tab_footnote(
    footnote = "Footnote",
    locations = cells_body(columns = species, rows = 2:3)
  ) |> 
  tab_spanner(
    label = "Penguins",
    columns = c(year, sex, species, island)
  ) |>
  tab_spanner(
    label = "Measurement",
    columns = bill_length_mm
  ) |> 
  cols_label(
    bill_length_mm = html("bill length,<br>mm")
  )
```

## Before

```{r}
dogbites_tbl <- gt(dogbites)
dogbites_tbl
```

## After {.smaller}
::: {.nonincremental}
```{r}
dogbites_tbl <- gt(dogbites2)

dogbites_tbl |> 
  tab_header(
    title = "Dog Bites In New York City",
    subtitle = "Date, Breed, Age, Borough, and Zip Code"
  ) |> 
  tab_source_note(
    source_note = "Source: Kaggle"
  ) |> 
  tab_footnote(
    footnote = "German Shepherd!",
    locations = cells_body(columns = , rows = 8:8)
  ) |> 
  tab_spanner(
    label = "About the Dog",
    columns = c(Age, Gender, breed)
    ) |> 
  cols_move_to_start(
    columns = c(Age, Gender, breed)
  )
```

- cols_move_to_start takes specified columns and moves them to the beginning of the table in the order specified
:::

## Hypothetical situation

::: {.nonincremental}
- Suppose you want to group rows by a theme 
- St. Olaf Statistics and Data Science were surveyed on their favorite colors to use in R
  - RColors and their names make up the rcolors variable
  - Preference is the number of students that identified this rcolor as their favorite 
:::

## gt table for rcolors 

```{r}
colors <- c("blue", "lightblue1", "deepskyblue", "deepskyblue1", "deepskyblue2","dodgerblue","navy", "red", "firebrick", "darkred", "orangered4", "orange", "orangered2", "orange3")
preference <- c("45", "34", "23", "13", "56", "78", "77", "32", "9", "63", "41", "23", "15", "7")

rcolors_data <- data.frame(rcolors = colors, preference = preference)
rcolors_tbl <- gt(rcolors_data)

rcolors_tbl |> 
  tab_header(
    title = "St Olaf Students' Favorite RColors",
    subtitle = "Primarily blue, red, and orange shades"
  ) |> 
  tab_source_note(
    source_note = "Source: This is not an actual dataset"
  ) |> 
  tab_footnote(
    footnote = "My personal favorite",
    locations = cells_body(columns = rcolors, rows = 5:5)
    )
```

## Stub 

::: {.nonincremental}
- The stub is on the left in a display table
- May contain row group labels
- Many cases where it is not necessary

```{r}
rcolors <- rcolors_data |> 
  gt(rowname_col = "rcolors")

rcolors |> 
  tab_row_group(
    label = "blue shades",
    rows = 1:7
  ) |>
  tab_row_group(
    label = "red shades",
    rows = 8:10
  ) |>
  tab_row_group(
    label = "orange shades",
    rows = 11:14
  )
```

- Three row groups have been made since there are three categories under rcolors (blue, red, orange)
- Previous table was fine without it
- Up to user discretion but a fun feature if it adds clarity 
:::

## Conclusion

- Knowledge is power
- Learn more about the capabilities of the gt package with these resources!

::: {style="text-align: center; margin-top: 1em"}
[Introduction](https://gt.rstudio.com/articles/gt.html) {preview-link="true" style="text-align: center"}
:::
::: {style="text-align: center; margin-top: 1em"}
[Reference](https://gt.rstudio.com/reference/index.html)
:::

